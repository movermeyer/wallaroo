# install python for full ansible support
- hosts: wallaroo-leaders:wallaroo-followers
  gather_facts: False
  tasks:
  - name: install python for full ansible support
    raw: apt-get install -y python

- hosts: wallaroo-followers:wallaroo-leaders
  tasks:
  - name: Create a group of all hosts for wallaroo
    group_by: key=wallaroo-all

# Apply common configuration to all hosts
- hosts: wallaroo-all
  roles:
  - { role: common, become: yes }

# Update pip and assign static ips
- hosts: wallaroo-all
  vars:
    ethernet_interface: "{{ ansible_default_ipv4.interface }}"
    ip_range_start: 201
  tasks:
  - name: Update pip with easy_install
    easy_install: name=pip state=latest
  - name: set my_ip variable
    set_fact: my_ip={{ hostvars[inventory_hostname]['ansible_' + ethernet_interface]['ipv4']['address'] }}
  - name: set my_new_ip variable
    set_fact: my_new_ip={{ my_ip.split('.')[0] }}.{{ my_ip.split('.')[1] }}.{{ my_ip.split('.')[2] }}.{{ ip_range_start + play_hosts.index(inventory_hostname) }}
  - name: change /etc/network/interfaces to use static ip for interface
    replace:
      dest: /etc/network/interfaces
      regexp: ^iface {{ ethernet_interface }} inet dhcp$
      replace: iface {{ ethernet_interface }} inet static
  - name: Add auto interface line
    lineinfile:
      dest: /etc/network/interfaces
      regexp: ^auto {{ ethernet_interface }}$
      insertbefore: ^iface {{ ethernet_interface }} inet static
      line: auto {{ ethernet_interface }}
  - name: Update address for interface
    lineinfile:
      dest: /etc/network/interfaces
      regexp: ^address {{ my_ip.split('.')[0] }}.{{ my_ip.split('.')[1] }}.{{ my_ip.split('.')[2] }}.*$
      insertafter: ^iface {{ ethernet_interface }} inet static
      line: address {{ my_new_ip }}
  - name: Update netmask for interface
    lineinfile:
      dest: /etc/network/interfaces
      regexp: ^netmask {{ hostvars[inventory_hostname]['ansible_' + ethernet_interface]['ipv4']['netmask'] }}$
      insertafter: ^address {{ my_new_ip }}
      line: netmask {{ hostvars[inventory_hostname]['ansible_' + ethernet_interface]['ipv4']['netmask'] }}
  - name: Update gateway for interface
    lineinfile:
      dest: /etc/network/interfaces
      regexp: ^gateway {{ hostvars[inventory_hostname]['ansible_default_ipv4']['gateway'] }}$
      insertafter: ^netmask {{ hostvars[inventory_hostname]['ansible_' + ethernet_interface]['ipv4']['netmask'] }}
      line: gateway {{ hostvars[inventory_hostname]['ansible_default_ipv4']['gateway'] }}

# restart default network interface to make new network settings go into effect
- hosts: wallaroo-all
  tasks:
  - name: restart interface to make ip change go into effect
    shell: sleep 2 && systemctl reload networking
    async: 30
    poll: 5
    ignore_errors: true

# Configure and deploy leader servers.
- hosts: wallaroo-leaders
  vars:
    ethernet_interface: "{{ ansible_default_ipv4.interface }}"
    ptpd_role: master
    ptpd_transport: multicast
    swarm_image: hypriot/rpi-swarm
    consul_image: hypriot/rpi-consul
    docker_users: [ root, wallaroo ]
    use_hostname: true
    docker_dockerpy_version: "1.9.0"
  roles:
  - { role: ptpd, become: yes }
  - { role: docker, become: yes }

# Configure and deploy follower servers.
- hosts: wallaroo-followers
  vars:
    ethernet_interface: "{{ ansible_default_ipv4.interface }}"
    ptpd_role: slave
    ptpd_transport: multicast
    leader_ip: "{{ hostvars[groups['wallaroo-leaders'][0]]['ansible_' + ethernet_interface]['ipv4']['address'] }}"
    swarm_image: hypriot/rpi-swarm
    consul_image: hypriot/rpi-consul
    docker_users: [ root, wallaroo ]
    use_hostname: true
    docker_dockerpy_version: "1.9.0"
  roles:
  - { role: ptpd, become: yes }
  - { role: docker, become: yes }

